<Project Sdk="Microsoft.NET.Sdk">
    <PropertyGroup>
        <OutputType>WinExe</OutputType>
        <!--If you are willing to use Windows/MacOS native APIs you will need to create 3 projects.
        One for Windows with net8.0-windows TFM, one for MacOS with net8.0-macos and one with net8.0 TFM for Linux.-->
        <TargetFramework>net8.0</TargetFramework>
        <BuiltInComInteropSupport>true</BuiltInComInteropSupport>
    </PropertyGroup>

    <ItemGroup>
        <Compile Include="QLearning.fs" />
        <Compile Include="Program.fs"/>
    </ItemGroup>

    <PropertyGroup>
        <ApplicationManifest>app.manifest</ApplicationManifest>
    </PropertyGroup>

    <ItemGroup>
        <PackageReference Include="Avalonia.Desktop" Version="$(AvaloniaVersion)"/>
        <PackageReference Include="Gym.NET" Version="0.2.0" />
        <PackageReference Include="Gym.NET.Environments" Version="0.2.0" />
        <PackageReference Include="Gym.NET.Rendering.Avalonia" Version="0.2.0" />
        <PackageReference Include="TorchSharp" Version="0.102.5" />
        <PackageReference Include="TorchSharp-cpu" Version="0.102.5" />
        <!--Condition below is needed to remove Avalonia.Diagnostics package from build output in Release configuration.-->
<!--        <PackageReference Condition="'$(Configuration)' == 'Debug'" Include="Avalonia.Diagnostics" Version="$(AvaloniaVersion)"/>-->
    </ItemGroup>

    <ItemGroup>
        <ProjectReference Include="..\QLearning.Avalonia\QLearning.Avalonia.fsproj"/>
    </ItemGroup>
    
</Project>
